name: Build and Push Docker Image with Auto Version Bump

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up SSH key to authenticate for GitHub
      #- name: Set up SSH key
      #  run: |
      #    mkdir -p ~/.ssh
      #    echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa  # Use the private key stored in secrets
      #    chmod 600 ~/.ssh/id_rsa  # Set the correct permissions for the private key
      #    ssh-keyscan github.com >> ~/.ssh/known_hosts  # Add GitHub to known hosts for SSH

      # Step 3: Set up Git user
      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Step 4: Read and bump version (major if #major in commit message)
      - name: Read and bump version (major if #major in commit message)
        id: bump_version
        run: |
          VERSION=$(cat VERSION)
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)

          COMMIT_MSG=$(git log -1 --pretty=%B)

          if echo "$COMMIT_MSG" | grep -q "#major"; then
            NEW_MAJOR=$((MAJOR + 1))
            NEW_VERSION="$NEW_MAJOR.0"
            echo "🔺 Major bump detected due to #major in commit message"
          else
            NEW_MINOR=$((MINOR + 1))
            NEW_VERSION="$MAJOR.$NEW_MINOR"
            echo "⬆️  Minor bump (no #major found)"
          fi

          echo "$NEW_VERSION" > VERSION
          echo "VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

      # Step 5: Check if any other files (besides VERSION) have changed
      #- name: Check if other files have changed
      #  id: check_other_files
      #  run: |
      #    git diff --exit-code VERSION || git diff --exit-code  # Will check for any changes other than the VERSION file

      # Step 6: Commit and push updated VERSION file if other files have changed
      #- name: Commit and push updated VERSION file
      #  if: steps.check_other_files.outcome == 'success'  # Only proceed if there are other changes besides VERSION
      #  run: |
      #    git add VERSION
      #    git commit -m "Bump version to ${{ steps.bump_version.outputs.VERSION }}"
      #    git push git@github.com:${{ github.repository }}.git HEAD:main  # Push using SSH key

      # Step 7: Set up Docker Buildx for multi-platform support
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 8: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 9: Build and Push Docker Image (only if there was a version bump)
      - name: Build and Push Docker Image
        if: steps.check_other_files.outcome == 'success'  # Only build if there were other changes besides VERSION
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/flask-app:${{ steps.bump_version.outputs.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/flask-app:latest
#